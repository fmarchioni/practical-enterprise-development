#Script to create Elytron  File System Realm and SASL Authentication factory

batch

# Create File System Realm

/subsystem=elytron/filesystem-realm=demoFsRealm:add(path=demofs-realm-users,relative-to=jboss.server.config.dir)
/subsystem=elytron/filesystem-realm=demoFsRealm:add-identity(identity=ejbuser)
/subsystem=elytron/filesystem-realm=demoFsRealm:set-password(identity=ejbuser,clear={password="password123"})
/subsystem=elytron/filesystem-realm=demoFsRealm:add-identity-attribute(identity=ejbuser,name=Roles, value=["employee"])
/subsystem=elytron/simple-role-decoder=from-roles-attribute:add(attribute=Roles)
/subsystem="elytron"/security-domain="fsSD":add(default-realm="demoFsRealm",permission-mapper="default-permission-mapper",realms=[{realm="demoFsRealm",role-decoder="from-roles-attribute"},{realm="local"}])
/subsystem="elytron"/sasl-authentication-factory="fs-application-sasl-authentication":add(mechanism-configurations=[{mechanism-name="JBOSS-LOCAL-USER",realm-mapper="local"},{mechanism-name="DIGEST-MD5",mechanism-realm-configurations=[{realm-name="demoFsRealm"}]}],sasl-server-factory="configured",security-domain="fsSD")

# Configure ejb3 subsystem to use File System Realm         

# needs to be removed if already configured
#/subsystem=ejb3/application-security-domain=other:remove()

#/subsystem=ejb3/application-security-domain=other:add(security-domain=fsSD)
 /subsystem=ejb3/application-security-domain=other:write-attribute(name=security-domain,value=fsSD)

# Configure elytron to use SASL authentication from our fs authentication factory
	
/subsystem=remoting/http-connector=http-remoting-connector:write-attribute(name=sasl-authentication-factory,value=fs-application-sasl-authentication)


run-batch

reload
